{  
  "swagger": "2.0",
  "host": "auth.neon-lab.com",
  "basePath": "/api/v2",
  "info": {
    "description": "Provides authentication for Neon services.",
    "title": "Neon Authentication API",
    "termsOfService": "TODO",
    "contact": {},
    "license": {
      "name": "Copyright"
    },
    "version": "2.1"
  },
  "tags": [
    {
      "name": "track",
      "description": "Group Tracking Events"
    }
  ],
  "documentationSets": [
    "public",
    "internal"
  ],
  "schemes": [
    "https" 
  ],
  "paths": {
    "/accounts": {
      "post": {
      "onlyVisibleInDocumentationSets": [
        "internal"
      ],
        "tags": [
          "account"
        ],
        "summary": "Create account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_name",
            "in": "query",
            "description": "The company name of the customer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The email that is associated with the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "admin_user_username",
            "in": "query",
            "description": "This is expected to be an email for the admin User. This can be the same as the account email or different.",
            "required": true,
            "type": "string"
          },
          {
            "name": "admin_user_password",
            "in": "query",
            "description": "The password for the admin user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "admin_user_first_name",
            "in": "query",
            "description": "The first name of the person controlling the admin account for this customer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "admin_user_last_name",
            "in": "query",
            "description": "The last name of the person controlling the admin account for this customer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "admin_user_title",
            "in": "query",
            "description": "The title of the person controlling the admin account for this customer.",
            "required": false,
            "type": "string"
          },
          {
            "name": "default_width",
            "in": "query",
            "description": "The default width of the account.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "default_height",
            "in": "query",
            "description": "The default height of the account.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "default_thumbnail_id",
            "in": "query",
            "description": "The id of the default thumbnail wanted for the account.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account verification email sent to {email}"
          }, 
          "500": { 
            "description": "Failed to send verification email to {email}"
          }
        }
      }
    },

    "/accounts/verify": {
      "post": {
        "tags": [
          "verify account"
        ],
        "summary": "Verify account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query", 
            "description": "The verification token that is sent back on a post to accounts.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "New Account has been added : name = {customer_name} id = {account_id}",
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        }
      }
    },

    "/{account_id}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "View account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The account associated with the requested ID.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        }
      },

      "put": {
        "tags": [
          "account"
        ],
        "summary": "Update account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "default_width",
            "in": "query",
            "description": "The default width of the account.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "default_height",
            "in": "query",
            "description": "The default height of the account.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "default_thumbnail_id",
            "in": "query",
            "description": "The id of the default thumbnail wanted for the account.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated account associated with the requested ID.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        }
      }
    },

    "/{account_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "description": "The email of the user.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A user with requested username.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      },

      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create a new user and associate it to an account.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "description": "The email of the user.",
            "required": true,
            "type": "string"
          }, 
          {
            "name": "password",
            "in": "query",
            "description": "The password of the user.",
            "required": true,
            "type": "string"
          }, 
          {
            "name": "access_level",
            "in": "query",
            "description": "The access level of the user, can only have access to what the requesting user has",
            "required": true,
            "type": "integer"
          }, 
          {
            "name": "first_name",
            "in": "query",
            "description": "The first name of the user.",
            "required": false,
            "type": "string"
          }, 
          {
            "name": "last_name",
            "in": "query",
            "description": "The last name of the user.",
            "required": false,
            "type": "string"
          }, 
          {
            "name": "title",
            "in": "query",
            "description": "The title of the user.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The newly-created thumbnail.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      },

      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update an existing user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "description": "The email of the user.",
            "required": true,
            "type": "string"
          }, 
          {
            "name": "access_level",
            "in": "query",
            "description": "The access level of the user, can only have access to what the requesting user has",
            "required": false,
            "type": "integer"
          }, 
          {
            "name": "first_name",
            "in": "query",
            "description": "The first name of the user.",
            "required": false,
            "type": "string"
          }, 
          {
            "name": "last_name",
            "in": "query",
            "description": "The last name of the user.",
            "required": false,
            "type": "string"
          }, 
          {
            "name": "title",
            "in": "query",
            "description": "The title of the user.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The modified user.",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/{account_id}/logout": {
      "post": {
        "tags": [
          "logout"
          ],
        "summary" : "Log the user out",
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "token",
            "in" : "body",
            "description" : "access token that will be invalidated",
            "required" : true,
            "type" : "string"
          }
        ]
      }
    },
    "/{account_id}/authenticate": {
      "post": {
        "tags": [
          "login"
          ],
        "summary" : "Authenticate the user with the username/password",
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "username",
            "in" : "body",
            "description" : "User  to authenticate",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "password",
            "in" : "body",
            "description" : "Password for the user",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses": {
          "200" : {
            "description": "The tokens and user information to access the API.",
            "schema": {
              "$ref": "#/definitions/tokens"
            }
          }
        }
      }
    },
    "/{account_id}/refresh_token": {
      "post": {
        "tags": [
          "login"
          ],
        "summary" : "Get a fresh access token",
        "produces" : [
          "application/json"
        ],
        "parameters" : [
          {
            "name" : "token",
            "in" : "body",
            "description" : "Refresh token",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses": {
          "200" : {
            "description": "The tokens and user information to access the API.",
            "schema": {
              "$ref": "#/definitions/tokens"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "account": {
      "type": "object",
      "properties": {
        "tracker_account_id": {
          "type": "string",
          "description": "ID to use in the tracker code."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "An ISO8601 date when the account was last updated."
        },
        "account_id": {
          "type": "string",
          "description": "ID of the account."
        },
        "email": {
          "type": "string",
          "description": "email of the account."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "An ISO8601 date when the account was created."
        },
        "integration_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of integration IDs associated with the account."
        },
        "default_size": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Default size of the image `[width, height]`."
        },
        "staging_tracker_account_id": {
          "type": "string",
          "description": "ID to use in tracking code on staging."
        },
        "default_thumbnail_id": {
          "type": "string",
          "description": "Default thumbnail if no others are found."
        },
        "customer_name": {
          "type": "string",
          "description": "Name of the customer."
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of usernames associated to the account."
        },
        "error": {
          "$ref": "#/definitions/error"
        }
      }
    },

    "error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Description of the error."
        },
        "data": {
          "type": "string",
          "description": "More detail about the error."
        }
      }
    },

    "tokens" : {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "Access token for subsequent calls to the API."
        },
        "refresh_token": {
          "type": "string",
          "description": "Token to refresh the access token when it expires."
        },
        "account_ids": {
          "type": "array",
          "description": "List of account ids this user can access.",
          "items": {
            "type": "string"
          }
        },
        "user_info": {
          "$ref":"#/defintions/user"
        }
      }
    },

    "user": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username of the user, this is always an email."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "An ISO8601 date when the account was last updated."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "An ISO8601 date when the account was created."
        },
        "email": {
          "type": "string",
          "description": "email of the user."
        },
        "access_level": {
          "type": "integer",
          "description": "bit packed integer that represents what this user can access."
        },
        "first_name": {
          "type": "string",
          "description": "First name of the user."
        },
        "last_name": {
          "type": "string",
          "description": "Last name of the user."
        },
        "title": {
          "type": "string",
          "description": "Title of the user."
        },
        "error": {
          "$ref": "#/definitions/error"
        }
      }
    }
  }
}