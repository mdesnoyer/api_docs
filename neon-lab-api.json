{
  "swagger": "2.0",
  "host": "services.neon-images.com",
  "basePath": "/api/v2",
  "info": {
    "description": "Provides consumers with the ability to hit Neon services.",
    "title": "Neon CMS API v2",
    "termsOfService": "TODO",
    "contact": {},
    "license": {
      "name": "TODO"
    },
    "version": "TODO"
  },
  "tags": [
    {
      "name": "track",
      "description": "Group Tracking Events"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {

    "/accounts": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Create account",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer_name",
            "in": "query",
            "description": "The name of the customer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "default_width",
            "in": "query",
            "description": "The default width of the account.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "default_height",
            "in": "query",
            "description": "The default height of the account.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "default_thumbnail_id",
            "in": "query",
            "description": "The id of the default thumbnail wanted for the account.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created an account.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        }
      }
    },

    "/{account_id}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "View account",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The account associated with the requested ID.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        }
      },

      "put": {
        "tags": [
          "account"
        ],
        "summary": "Update account",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "default_width",
            "in": "query",
            "description": "The default width of the account.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "default_height",
            "in": "query",
            "description": "The default height of the account.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "default_thumbnail_id",
            "in": "query",
            "description": "The id of the default thumbnail wanted for the account.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated account associated with the requested ID.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        }
      }
    },

    "/{account_id}/integrations/brightcove": {
      "get": {
        "tags": [
          "integration",
          "brightcove"
        ],
        "summary": "View Brightcove integration",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "integration_id",
            "in": "query",
            "description": "ID of the integration.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the integration with that `account_id` and `integration_id`.",
            "schema": {
              "$ref": "#/definitions/brightcove_integration"
            }
          }
        }
      },

      "post": {
        "tags": [
          "integration",
          "brightcove"
        ],
        "summary": "Create a Brightcove integration",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publisher_id",
            "in": "query",
            "description": "ID of the publisher.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/brightcove_integration"
            }
          }
        }
      },

      "put": {
        "tags": [
          "integration",
          "brightcove"
        ],
        "summary": "Update a Brightcove integration",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "integration_id",
            "in": "query",
            "description": "ID of the integration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publisher_id",
            "in": "query",
            "description": "ID of the publisher.",
            "required": false,
            "type": "string"
          },
          {
            "name": "read_token",
            "in": "query",
            "description": "Token for reading.",
            "required": false,
            "type": "string"
          },
          {
            "name": "write_token",
            "in": "query",
            "description": "Token for writing.",
            "required": false,
            "type": "string"
          },
          {
            "name": "playlist_feed_ids",
            "in": "query",
            "description": "List of feed_ids for this integration.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "uses_batch_provisioning",
            "in": "query",
            "description": "Whether or not to use batched provisioning.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "callback_url",
            "in": "query",
            "description": "URL to call after a video has been processed.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/brightcove_integration"
            }
          }
        }
      }
    },

    "/{account_id}/integrations/ooyala": {
      "get": {
        "tags": [
          "integration",
          "ooyala"
        ],
        "summary": "View Ooyala integration",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "integration_id",
            "in": "query",
            "description": "ID of the integration.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the integration with that `account_id` and `integration_id`.",
            "schema": {
              "$ref": "#/definitions/ooyala_integration"
            }
          }
        }
      },

      "post": {
        "tags": [
          "integration",
          "ooyala"
        ],
        "summary": "Create an Ooyala integration",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publisher_id",
            "in": "query",
            "description": "ID of the publisher.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ooyala_integration"
            }
          }
        }
      },

      "put": {
        "tags": [
          "integration",
          "ooyala"
        ],
        "summary": "Update an Ooyala integration",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "integration_id",
            "in": "query",
            "description": "ID of the integration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "publisher_id",
            "in": "query",
            "description": "ID of the publisher.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ooyala_api_key",
            "in": "query",
            "description": "API key for Ooyala integration.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ooyala_api_secret",
            "in": "query",
            "description": "API secret for Ooyala integration.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ooyala_integration"
            }
          }
        }
      }
    },

    "/{account_id}/statistics/videos": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Get basic video statistics.",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "video_id",
            "in": "query",
            "description": "Comma-separated string of up to 100 video IDs.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated string of fields to return. Can include `experiment_state`, `winner_thumbnail`, `created`, and `updated`.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of video statistics with the requested fields.",
            "schema": {
              "$ref": "#/definitions/video_statistics"
            }
          }
        }
      }
    },

    "/{account_id}/statistics/thumbnails": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Basic thumbnail statistics",
        "description": "This will return basic thumbnail stats by `thumbnail_id` or `video_id`.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "video_id",
            "in": "query",
            "description": "Comma-separated string of up to 20 video IDs.",
            "required": false,
            "type": "string"
          },
          {
            "name": "thumbnail_id",
            "in": "query",
            "description": "Comma-separated string of up to 100 thumbnail IDs.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated string of fields to return. Can include `serving_frac` (the fraction of traffic seeing this thumbnail), `ctr` (the click-through rate), `impressions` (the number of impressions), `conversions` (the number of conversions), `created`, and `updated`.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of thumbnail statistics with the requested fields.",
            "schema": {
              "$ref": "#/definitions/thumbnail_statistics"
            }
          }
        }
      }
    },

    "/{account_id}/thumbnails": {
      "get": {
        "tags": [
          "thumbnails"
        ],
        "summary": "Get thumbnail.",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "thumbnail_id",
            "in": "query",
            "description": "The ID of the thumbnail.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated string of fields to return.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A thumbnail with the requested fields.",
            "schema": {
              "$ref": "#/definitions/thumbnail"
            }
          }
        }
      }
    }

  },
  "definitions": {
    "account": {
      "type": "object",
      "properties": {
        "tracker_account_id": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "account_id": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "integration_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default_size": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "staging_tracker_account_id": {
          "type": "string"
        },
        "default_thumbnail_id": {
          "type": "string"
        },
        "customer_name": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
      },
    },

    "brightcove_integration": {
      "type": "object",
      "properties": {
        "integration_id": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "callback_url": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "read_token": {
          "type": "string"
        },
        "write_token": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "video_still_width": {
          "type": "integer"
        },
        "id_field": {
          "type": "string"
        },
        "last_process_date": {
          "type": "string",
          "format": "date-time"
        },
        "auto_update": {
          "type": "boolean"
        },
        "rendition_frame_width": {
          "type": "integer"
        },
        "linked_youtube_account": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "uses_batch_provisioning": {
          "type": "boolean"
        },
        "playlist_feed_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publisher_id": {
          "type": "string"
        },
        "account_created": {
          "type": "number"
        },
        "error": {
          "type": "string"
        },
      }
    },

    "ooyala_integration": {
      "type": "object",
      "properties": {
        "integration_id": {
          "type": "string"
        },
        "partner_code": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "account_id": {
          "type": "string"
        },
        "api_key": {
          "type": "string"
        },
        "api_secret": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "auto_update": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
      }
    },

    "thumbnail": {
      "type": "object",
      "properties": {
        "video_id": {
          "type": "string",
          "description": "ID of the video this thumbnail is associated with."
        },
        "thumbnail_id": {
          "type": "string",
          "description": "Unique ID of this thumbnail."
        },
        "rank": {
          "type": "string",
          "minimum": 0,
          "maximum": 6,
          "description": "Neon Labs' ranking of this image, where lower numbers are higher rankings."
        },
        "frameno": {
          "type": "integer",
          "description": "Frame number where this image exists in the source video."
        },
        "neon_score": {
          "type": "integer",
          "minimum": 0,
          "maximum": 6,
          "description": "Neon Labs' score for this image, where higher is better."
        },
        "enabled": {
          "type": "boolean",
          "description": "Can this image be shown?"
        },
        "height": {
          "type": "integer",
          "minimum": 0,
          "description": "Height of the image in pixels."
        },
        "width": {
          "type": "integer",
          "minimum": 0,
          "description": "Width of the image in pixels."
        },
        "external_ref": {
          "type": "string",
          "description": "ID of the asset in an external system."
        },
        "type": {
          "type": "string",
          "enum": [
            "neon",
            "default",
            "customupload"
          ],
          "description": "'neon' is generated by Neon Labs, 'default' is provided during the processing request, and 'customupload' is provided to Neon Labs after processing."
        },
        "url": {
          "type": "string",
          "description": "The location of the thumbnail."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "An ISO date for when the thumbnail was created."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "An ISO date for when the thumbnail was last updated."
        },
        "error": {
          "type": "string"
        },
      }
    },

    "thumbnail_statistic": {
      "type": "object",
      "required": [
        "thumbnail_id",
        "video_id"
      ],
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "thumbnail_id": {
          "type": "string"
        },
        "video_id": {
          "type": "string"
        },
        "serving_frac": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1
        },
        "ctr": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1
        },
        "conversions": {
          "type": "integer",
          "minimum": 0
        },
        "impressions": {
          "type": "integer",
          "minimum": 0
        }
      }
    },

    "thumbnail_statistics": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0
        },
        "statistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/thumbnail_statistic"
          }
        },
        "error": {
          "type": "string"
        }
      }
    },

    "video_statistic": {
      "type": "object",
      "required": [
        "video_id"
      ],
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "experimental_state": {
          "type": "string",
          "enum": [
            "complete",
            "disabled",
            "override",
            "running",
            "unknown"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "video_id": {
          "type": "string"
        },
        "winner_thumbnail": {
          "type": "string"
        }
      }
    },

    "video_statistics": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0
        },
        "statistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/video_statistic"
          }
        },
        "error": {
          "type": "string"
        }
      }
    }
  }
}
